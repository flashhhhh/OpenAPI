openapi: 3.1.0
info:
  title: Swagger Example APIs
  description: Simple APIs written in Go to demonstrate Swagger
  version: 1.0.0
servers:
  - url: http://localhost:1906
    description: Local server
paths:
  /users:
    get:
      summary: Get all users
      description: Returns a list of all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    name:
                      type: string
        '405':
          description: Method not allowed
        '500':
          description: Internal server error
  
  /users/{id}:
    get:
      summary: Get a user by ID
      description: Returns a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Method not allowed
        '500':
          description: Internal server error

  /users/signup:
    post:
      summary: Register a new user
      description: Register a new user
      requestBody:
        description: User to register
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                name:
                  type: string
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
        '405':
          description: Method not allowed
        '409':
          description: User already exists
        '500':
          description: Internal server error
    
  /users/login:
    post:
      summary: Login a user
      description: Login a user
      requestBody:
        description: User to login
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '405':
          description: Method not allowed
        '500':
          description: Internal server error
